{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/objects/Earth.js",
    "src/objects/Plant.js",
    "src/objects/RainbowText.js",
    "src/objects/Splitter.js",
    "src/objects/text.js",
    "src/states/DragndropPlants.js",
    "src/states/DuplicateCells.js",
    "src/states/GameState.js",
    "src/states/Kollision.js",
    "src/states/Preloader.js",
    "src/states/Urknall.js",
    "src/utils/translate.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import GameState from 'states/GameState';\r\nimport Urknall from 'states/Urknall';\r\nimport Preloader from 'states/Preloader';\r\nimport Kollision from 'states/Kollision';\r\nimport Cells from 'states/DuplicateCells';\r\nimport Plants from 'states/DragndropPlants';\r\nimport DuplicateCells from \"./states/DuplicateCells\";\r\nimport DragndropPlants from \"./states/DragndropPlants\";\r\n\r\nclass Game extends Phaser.Game {\r\n\r\n\tconstructor() {\r\n\t\tsuper(window.innerWidth, window.innerHeight, Phaser.CANVAS, 'content', window.devicePixelRatio);\r\n\t\t//this.state.add('GameState', GameState, false);\r\n        this.state.add('Preloader', Preloader, false);\r\n        this.state.add('Urknall', Urknall, false);\r\n        this.state.add('Kollision', Kollision, false);\r\n        this.state.add('DuplicateCells', DuplicateCells, false);\r\n        this.state.add('DragndropPlants', DragndropPlants, false);\r\n\r\n\t\tthis.earthRotate = 0;\r\n\t\tthis.cellCounter = 0;\r\n\r\n\t\tthis.state.start('Preloader');\r\n\r\n\r\n\t}\r\n\r\n}\r\n\r\nnew Game();\r\n",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\n\r\nclass Earth extends Phaser.Sprite {\r\n\r\n    constructor(game, x, y, name, rotate) {\r\n\r\n        //game.load.image('firstEarth', '../assets/Urknall/littleEarth.png');\r\n        super(game, x, y, name);\r\n        this.anchor.x = 0.5;\r\n        this.anchor.y = 0.5;\r\n        this.scale.x = 0.5;\r\n        this.scale.y = 0.5;\r\n        this.angle = rotate;\r\n        //this._colorIndex = 0;\r\n        //this._colors = ['#ee4035', '#f37736', '#fdf498', '#7bc043', '#0392cf'];\r\n\r\n        //this.colorize();\r\n        //this.rotate();\r\n        //this.startTimer();\r\n\r\n        this.game.stage.addChild(this);\r\n\r\n    }\r\n    startTimer() {\r\n        this.game.time.events.loop(this.rotate).timer.start();\r\n    }\r\n\r\n    update() {\r\n\r\n        this.angle -= 0.03;\r\n        this.game.earthRotate = this.angle;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Earth;",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\n\r\nclass Plant extends Phaser.Sprite {\r\n\r\n    constructor(game, x, y, name) {\r\n\r\n        super(game, x, y, 'plant');\r\n\r\n        this.anchor.x = 0.5;\r\n        this.anchor.y = 0.5;\r\n        this.scale.x = 0.05;\r\n        this.scale.y = 0.05;\r\n\r\n        this.game.stage.addChild(this);\r\n    }\r\n\r\n}\r\n\r\nexport default Plant;",
    "class RainbowText extends Phaser.Text {\r\n\r\n\tconstructor(game, x, y, text) {\r\n\r\n\t\tsuper(game, x, y, text, { font: \"45px Arial\", fill: \"#ff0044\", align: \"center\" });\r\n\r\n\t\tthis._speed = 125; //ms\r\n\t\tthis._colorIndex = 0;\r\n\t\tthis._colors = ['#ee4035', '#f37736', '#fdf498', '#7bc043', '#0392cf'];\r\n\r\n\t\tthis.colorize();\r\n\t\tthis.startTimer();\r\n\r\n\t\tthis.game.stage.addChild(this);\r\n\r\n\t}\r\n\t\r\n\tstartTimer() {\r\n\t\tthis.game.time.events.loop(this._speed, this.colorize, this).timer.start();\r\n\t}\r\n\r\n\tcolorize() {\r\n\r\n\t\tfor (let i = 0; i < this.text.length; i++) {\r\n\r\n\t\t\tif (this._colorIndex === this._colors.length) {\r\n\t\t\t\tthis._colorIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.addColor(this._colors[this._colorIndex], i);\r\n\t\t\tthis._colorIndex++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default RainbowText;",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\n\r\nclass Splitter extends Phaser.Sprite {\r\n\r\n    constructor(game, x, y, name) {\r\n\r\n        super(game, x, y, 'splitter');\r\n\r\n        this.anchor.x = 0.5;\r\n        this.anchor.y = 0.5;\r\n\r\n        this.scale.x = 0.2;\r\n        this.scale.y = 0.2;\r\n\r\n        this.game.stage.addChild(this);\r\n\r\n    }\r\n\r\n    update(){\r\n        let spacebar = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\r\n        spacebar.onDown.add(this.move, this);\r\n\r\n        this.game.input.keyboard.addKeyCapture([ Phaser.Keyboard.SPACEBAR ]);\r\n\r\n    }\r\n\r\n    move() {\r\n        this.x += 10;\r\n        this.y += 10;\r\n    }\r\n\r\n}\r\n\r\nexport default Splitter;",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\nclass Text extends Phaser.Text {\r\n\r\n    constructor(game, text) {\r\n\r\n        var style = { font: \"16px Helvetica\", fill: \"#fff\"};\r\n        super(game, Math.round(window.innerWidth/2),Math.round(window.innerHeight/6), text, style);\r\n        this.anchor.x = 0.5;\r\n        this.anchor.y = 0.5;\r\n        this.resolution = window.devicePixelRatio;\r\n        this.game.stage.addChild(this);\r\n        this.game.time.events.add(Phaser.Timer.SECOND * 10, this.destroy, this);\r\n    }\r\n\r\n\r\n    changeText(text) {\r\n        this.text = text;\r\n    }\r\n\r\n}\r\n\r\nexport default Text;",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\nimport Earth from 'objects/Earth';\r\nimport Plant from 'objects/Plant';\r\n\r\nclass DragndropPlants extends Phaser.State {\r\n\r\n    create() {\r\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n\r\n        let center = { x: this.game.world.centerX, y: this.game.world.centerY };\r\n        this.earth = new Earth(this.game, center.x, center.y, 'firstEarth', this.game.earthRotate);\r\n        console.info(this.game.earthRotate);\r\n\r\n        this.plant = new Plant(this.game, 70, 70, 'plant');\r\n\r\n        this.game.physics.enable( [ this.earth, this.plant ], Phaser.Physics.ARCADE);\r\n\r\n        this.plant.inputEnabled = true;\r\n        this.plant.input.enableDrag(true);\r\n    }\r\n\r\n    update(){\r\n        this.game.physics.arcade.collide(this.earth, this.plant, this.collisionHandler, null, this);\r\n    }\r\n\r\n    collisionHandler (obj1, obj2) {\r\n        //  The two sprites are colliding\r\n        this.game.stage.backgroundColor = '#992d2d';\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default DragndropPlants;",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\nimport Earth from 'objects/Earth';\r\n\r\nclass DuplicateCells extends Phaser.State {\r\n\r\n    create() {\r\n        let center = { x: this.game.world.centerX, y: this.game.world.centerY };\r\n\r\n        this.cell = this.game.add.sprite(center.x, center.y, 'cells');\r\n        this.cell.anchor.x = 0.5;\r\n        this.cell.anchor.y = 0.5;\r\n        this.cell.scale.x = 0.2;\r\n        this.cell.scale.y = 0.2;\r\n\r\n        this.cell.inputEnabled = true;\r\n        this.cell.events.onInputDown.add(this.listener, this);\r\n\r\n        this.game.stage.backgroundColor = '#031625';\r\n    }\r\n\r\n    update(){\r\n        if(this.game.cellCounter === 5) {\r\n            this.nextEvent();\r\n        }\r\n    }\r\n\r\n    listener () {\r\n        let cell = this.game.add.sprite(this.game.world.randomX, this.game.world.randomY, 'cells');\r\n        cell.scale.x = 0.2;\r\n        cell.scale.y = 0.2;\r\n        this.game.cellCounter ++;\r\n    }\r\n\r\n\r\n    nextEvent() {\r\n        this.game.world.removeAll();\r\n        console.log('destroyed');\r\n        this.game.state.start('DragndropPlants', true, false);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default DuplicateCells;",
    "import RainbowText from 'objects/RainbowText';\r\n\r\nclass GameState extends Phaser.State {\r\n\r\n\tcreate() {\r\n\t\tlet center = { x: this.game.world.centerX, y: this.game.world.centerY }\r\n\t\tlet text = new RainbowText(this.game, center.x, center.y, \"- phaser -\\nwith a sprinkle of\\nES6 dust!\");\r\n\t\ttext.anchor.set(0.5);\r\n\t}\r\n\r\n}\r\n\r\nexport default GameState;\r\n",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\nimport Earth from 'objects/Earth';\r\nimport Translation from 'utils/translate';\r\nimport Text from 'objects/text';\r\n\r\nclass Kollision extends Phaser.State {\r\n\r\n\r\n    create() {\r\n        // earth\r\n        let center = { x: this.game.world.centerX, y: this.game.world.centerY };\r\n        this.earth = new Earth(this.game, center.x, center.y, 'firstEarth', this.game.earthRotate);\r\n\r\n        //text\r\n        let translation = new Translation(this.game);\r\n        this.text = translation.translate(\"first4\");\r\n        this.textbox = new Text(this.game, this.text);\r\n\r\n        //button\r\n        this.button = this.game.add.sprite(this.game.world.centerX/2, this.game.world.height, 'redButton');\r\n        this.button.anchor.x = 0.5; this.button.scale.x = 0.7; this.button.scale.y = 0.7;\r\n        this.game.time.events.add(Phaser.Timer.SECOND * 5, this.moveButton, this);\r\n\r\n        //splitter\r\n        this.splitter = this.game.add.sprite(0, window.innerHeight/2, 'splitter');\r\n        this.splitter.scale.x = 0.3; this.splitter.scale.y = 0.3;\r\n        this.isDestroyed = false;\r\n\r\n        // groups for z depth\r\n        let earthG = this.game.add.group();\r\n        let buttonG = this.game.add.group();\r\n        earthG.add(this.earth);\r\n        buttonG.add(this.button);\r\n        earthG.z = 100;\r\n        buttonG.z = 120;\r\n    }\r\n\r\n    moveButton() {\r\n        //this.game.physics.arcade.enable([ this.button ], Phaser.Physics.ARCADE);\r\n        this.game.add.tween(this.button).to( { y: window.innerHeight/6*4}, 3000, Phaser.Easing.Cubic.InOut, true);\r\n        this.button.inputEnabled = true;\r\n        this.button.events.onInputDown.add(this.listener, this);\r\n    }\r\n    listener () {\r\n        this.game.add.tween(this.button).to( { y: this.game.world.height}, 3000, Phaser.Easing.Linear.None, true);\r\n        this.splitter = this.game.add.sprite(0, window.innerHeight/2, 'splitter');\r\n        this.splitter.scale.x = 0.3; this.splitter.scale.y = 0.3;\r\n        this.isDestroyed = false;\r\n        this.game.add.tween(this.splitter).to( { x: this.game.world.centerX , y: this.game.world.centerY}, 3000, Phaser.Easing.Linear.None, true);\r\n        console.info('Button clicked.');\r\n    }\r\n    update() {\r\n\r\n        if (!this.isDestroyed && this.splitter.x == this.game.world.centerX)\r\n        {\r\n            console.info('Collap!');\r\n            this.splitter.destroy();\r\n            this.isDestroyed = true;\r\n            this.game.state.start('Cells');\r\n        }\r\n    }\r\n\r\n    checkOverlap(spriteA, spriteB) {\r\n        var boundsA = spriteA.getBounds();\r\n        var boundsB = spriteB.getBounds();\r\n\r\n        return Phaser.Rectangle.intersects(boundsA, boundsB);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Kollision;",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\nclass Preloader extends Phaser.State {\r\n\r\n\r\n    preload() {\r\n        this.game.load.script('webfont', '//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js');\r\n        this.game.load.image('firstEarth', 'assets/Urknall/littleEarth.png');\r\n        this.game.load.image('redButton', 'assets/Kollision/Button.png');\r\n        this.game.load.json('translation', 'data/languageText.json');\r\n        this.game.load.image('splitter', 'assets/Urknall/splitter.png');\r\n        this.game.load.image('plant', 'assets/Plants/plant.png');\r\n        this.game.load.image('cells', 'assets/Cell/cell.png');\r\n    }\r\n\r\n\r\n    create() {\r\n        this.game.load.start();\r\n        this.game.state.start('Urknall');\r\n    }\r\n\r\n}\r\n\r\nexport default Preloader;",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\nimport RainbowText from 'objects/RainbowText';\r\nimport Earth from 'objects/Earth';\r\nimport Splitter from 'objects/Splitter';\r\nimport Translation from 'utils/translate';\r\nimport Text from 'objects/text';\r\n\r\nclass Urknall extends Phaser.State {\r\n\r\n\r\n\r\n    create() {\r\n        let center = { x: this.game.world.centerX, y: this.game.world.centerY }\r\n        this.earth = new Earth(this.game, center.x, center.y, 'firstEarth',this.game.earthRotate);\r\n        let translation = new Translation(this.game);\r\n        this.text = translation.translate(\"first1\");\r\n        this.textbox = new Text(this.game, this.text);\r\n\r\n        this.splitter = new Splitter(this.game, 70, 50);\r\n\r\n        this.splitter.inputEnabled = true;\r\n        this.splitter.input.enableDrag(true);\r\n        let key1 = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\r\n        key1.onDown.add(this.nextEvent, this);\r\n\r\n\r\n    }\r\n\r\n    nextEvent() {\r\n        this.splitter.destroy();\r\n        this.textbox.destroy();\r\n        this.earth.destroy();\r\n        this.game.state.start('Kollision');\r\n    }\r\n}\r\n\r\nexport default Urknall;\r\n",
    "/**\r\n * Created by alinaisabelle on 23.04.18.\r\n */\r\nexport default class Translation {\r\n    /**\r\n     * Constructor for Translation\r\n     *\r\n     * @param {Object} game Reference to the Game Object\r\n     * @param {Object} translations The translations from your JSON object\r\n     */\r\n    constructor(game, translations) {\r\n        this.game = game;\r\n        this.defaultLanguage = 'de';\r\n        this.availableLanguages = ['en', 'de'];\r\n        this.translations = this.game.cache.getJSON('translation');\r\n\r\n        // check for user language\r\n        let preferredLanguage = navigator.language || navigator.userLanguage || navigator.browserLanguage || navigator.systemLanguage || this.defaultLanguage;\r\n\r\n        // check if valid or not\r\n        if (preferredLanguage === null || preferredLanguage === undefined || preferredLanguage === false || typeof (preferredLanguage !== 'string')) {\r\n            this.languageCode = this.defaultLanguage;\r\n            // if valid, then get first 2 chars of languag code\r\n        } else if (preferredLanguage.length > 2) {\r\n            this.languageCode = preferredLanguage.substr(0, 2);\r\n            // already valid and only 2 characters long\r\n        } else {\r\n            this.languageCode = preferredLanguage;\r\n        }\r\n\r\n        // if the language code is not in the available languages, then use the default language\r\n        if(!this.contains(this.availableLanguages, this.languageCode)) {\r\n            this.languageCode = this.defaultLanguage\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Returns a string translation\r\n     *\r\n     * @param {string} val the text to translate\r\n     *\r\n     * @returns {string}\r\n     */\r\n    translate(val) {\r\n        if(this.translations[this.languageCode][val]) {\r\n            console.info('Got it!');\r\n            return this.translations[this.languageCode][val];\r\n        } else {\r\n            // console.info('could not find translation', val, '-' this.lc);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description loops through a given array and checks if the passed value is matched anywhere\r\n     *\r\n     * @param {array} arr Array to loop over\r\n     * @param {string} val value to compare\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    contains(arr, val) {\r\n        for (let i = 0; i < arr.length - 1; i++) {\r\n            if (arr[i] == val) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}"
  ]
}