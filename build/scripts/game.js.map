{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/objects/Earth.js",
    "src/objects/Moon.js",
    "src/objects/RainbowText.js",
    "src/objects/Splitter.js",
    "src/objects/text.js",
    "src/states/Dinosaurier.js",
    "src/states/DragndropPlants.js",
    "src/states/DuplicateCells.js",
    "src/states/End.js",
    "src/states/GameState.js",
    "src/states/Kollision.js",
    "src/states/Magma.js",
    "src/states/Moon.js",
    "src/states/People.js",
    "src/states/Preloader.js",
    "src/states/Urknall.js",
    "src/utils/translate.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import GameState from 'states/GameState';\nimport Urknall from 'states/Urknall';\nimport Preloader from 'states/Preloader';\nimport Kollision from 'states/Kollision';\nimport Cells from 'states/DuplicateCells';\nimport Plants from 'states/DragndropPlants';\nimport Moon from 'states/Moon';\nimport Magma from 'states/Magma';\nimport People from 'states/People';\nimport End from 'states/End';\n\nimport Dinos from 'states/Dinosaurier';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\t\tsuper(window.innerWidth, window.innerHeight, Phaser.CANVAS, 'content', window.devicePixelRatio);\n\t\t//this.state.add('GameState', GameState, false);\n        this.state.add('Preloader', Preloader, false);\n        this.state.add('Urknall', Urknall, false);\n        this.state.add('Kollision', Kollision, false);\n        this.state.add('Cells', Cells, false);\n        this.state.add('Plants', Plants, false);\n        this.state.add('Moon', Moon, false);\n        this.state.add('Magma', Magma, false);\n        this.state.add('People', People, false);\n        this.state.add('End', End, false);\n        this.state.add('Dinos', Dinos, false);\n\n        //global variables\n\t\tthis.earthRotate = 0;\n\t\tthis.cellCounter = 0;\n        this.moonRotate = 0;\n        this.collided = false;\n        this.counter = 0;\n\n\t\tthis.state.start('Preloader');\n\n\n\t}\n\n}\n\nnew Game();\n",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\n\nclass Earth extends Phaser.Sprite {\n\n    constructor(game, x, y, name, rotate) {\n\n        //game.load.image('firstEarth', '../assets/Urknall/littleEarth.png');\n        super(game, x, y, name);\n        this.anchor.x = 0.5;\n        this.anchor.y = 0.5;\n        this.scale.x = 0.5;\n        this.scale.y = 0.5;\n        this.angle = rotate;\n\n        this.game.stage.addChild(this);\n\n    }\n    startTimer() {\n        this.game.time.events.loop(this.rotate).timer.start();\n    }\n\n    update() {\n\n        this.angle -= 0.03;\n        this.game.earthRotate = this.angle;\n\n    }\n\n}\n\nexport default Earth;",
    "/**\n * Created by alinaisabelle on 24.04.18.\n */\n\nclass MoonObject extends Phaser.Sprite {\n\n    constructor(game, x, y, name) {\n\n        super(game, game.world.centerX, game.world.centerY, name);\n\n        this.anchor.x = x;\n        this.anchor.y = -y;\n\n        this.scale.x = 0.1;\n        this.scale.y = 0.1;\n        this.angle = this.game.moonRotate;\n\n        this.game.stage.addChild(this);\n\n    }\n\n    update() {\n\n        this.angle += 0.03;\n        this.game.moonRotate = this.angle;\n\n    }\n\n\n\n\n}\n\nexport default MoonObject;",
    "class RainbowText extends Phaser.Text {\n\n\tconstructor(game, x, y, text) {\n\n\t\tsuper(game, x, y, text, { font: \"45px Arial\", fill: \"#ff0044\", align: \"center\" });\n\n\t\tthis._speed = 125; //ms\n\t\tthis._colorIndex = 0;\n\t\tthis._colors = ['#ee4035', '#f37736', '#fdf498', '#7bc043', '#0392cf'];\n\n\t\tthis.colorize();\n\t\tthis.startTimer();\n\n\t\tthis.game.stage.addChild(this);\n\n\t}\n\t\n\tstartTimer() {\n\t\tthis.game.time.events.loop(this._speed, this.colorize, this).timer.start();\n\t}\n\n\tcolorize() {\n\n\t\tfor (let i = 0; i < this.text.length; i++) {\n\n\t\t\tif (this._colorIndex === this._colors.length) {\n\t\t\t\tthis._colorIndex = 0;\n\t\t\t}\n\n\t\t\tthis.addColor(this._colors[this._colorIndex], i);\n\t\t\tthis._colorIndex++;\n\n\t\t}\n\n\t}\n\n}\n\nexport default RainbowText;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\n\nclass Splitter extends Phaser.Sprite {\n\n    constructor(game, x, y, name) {\n\n        super(game, x, y, 'splitter');\n\n        this.anchor.x = 0.5;\n        this.anchor.y = 0.5;\n\n        this.scale.x = 0.2;\n        this.scale.y = 0.2;\n\n        this.game.stage.addChild(this);\n\n    }\n\n    update(){\n        let spacebar = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n        spacebar.onDown.add(this.move, this);\n\n        this.game.input.keyboard.addKeyCapture([ Phaser.Keyboard.SPACEBAR ]);\n\n    }\n\n    move() {\n        this.x += 10;\n        this.y += 10;\n    }\n\n}\n\nexport default Splitter;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nclass Text extends Phaser.Text {\n\n    constructor(game, text) {\n\n        var style = { font: \"16px Roboto Mono\", fill: \"#fff\", align: \"center\", wordWrap: true, wordWrapWidth: 1000};\n        super(game, Math.round(window.innerWidth/2),Math.round(window.innerHeight/6), text, style);\n        this.anchor.x = 0.5;\n        this.anchor.y = 0.5;\n        this.resolution = window.devicePixelRatio;\n        this.game.stage.addChild(this);\n        //this.game.time.events.add(Phaser.Timer.SECOND * 12, this.delete, this);\n    }\n\n    delete() {\n        this.destroy(true);\n    }\n}\n\nexport default Text;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nimport Earth from 'objects/Earth';\nimport Translation from 'utils/translate';\nimport Text from 'objects/text';\n\nclass Dinosaurs extends Phaser.State {\n\n    create() {\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\n\n        this.earth = new Earth(this.game, this.game.world.centerX, this.game.world.centerY, 'firstEarth', this.game.earthRotate);\n\n        //text\n        this.translation = new Translation(this.game);\n        let text = this.translation.translate(\"first12\");\n        this.textbox = new Text(this.game, text);\n\n        this.firstStage = true;\n        this.secondStage = false;\n\n\n\n        //enable mouse input\n        this.game.input.mouse.capture = true;\n\n        //counts plants on earth\n        this.dinosCount = 0;\n\n\n        //z-depth\n        let earthG = this.game.add.group();\n        this.DinosG = this.game.add.group();\n        this.onEarth = this.game.add.group(); this.onEarth.x = this.game.world.centerX; this.onEarth.y = this.game.world.centerY;\n        earthG.add(this.earth);\n        earthG.z = 100;\n        this.DinosG.z = 120;\n        this.onEarth.z = 130;\n        this.game.physics.enable( [ this.earth], Phaser.Physics.ARCADE);\n\n        this.dinosReady();\n    }\n\n    update(){\n        if (this.dinosCount === 6) {\n            //this.items.anchor.x = 0.5; this.items.anchor.y = 0.5;\n            this.dinosRotate = true;\n            this.lastText();\n        }\n\n        if (this.dinosRotate) {\n\n            this.DinosG.angle -= 0.03;\n\n            for(var i = 0; i <= this.DinosG.children.length-1; i++) {\n                this.DinosG.children[i].angle += 0.03;\n            }\n        }\n\n\n\n        if (this.isEnd && this.game.input.activePointer.leftButton.isDown) {\n            this.nextEvent();\n        }\n        //this.game.physics.arcade.collide(this.earth, this.plant, this.collisionHandler, null, this);\n    }\n\n    dinosReady() {\n        this.DinosG.x = this.game.world.centerX;\n        this.DinosG.y = this.game.world.centerY;\n\n        let item;\n        for (var i = 0; i < 6; i++)\n        {\n            // Directly create sprites from the group.\n            item = this.DinosG.create((-this.game.world.centerX+90), (-this.game.world.centerY + 200 + 80 * i), 'dino', i);\n            item.anchor.x = 0.5;\n            item.anchor.y = 0.5;\n            item.scale.x = 0.1;\n            item.scale.y = 0.1;\n            item.name = 'block' + i;\n\n            // Enable input detection, then it's possible be dragged.\n            item.inputEnabled = true;\n\n            // Make this item draggable.\n            item.input.enableDrag();\n\n            // Then we make it snap to 90x90 grids.\n            //item.input.enableSnap(50, 50, false, true);\n\n            // Add a handler to remove it using different options when dropped.\n            this.game.physics.enable( [ item ], Phaser.Physics.ARCADE);\n            item.events.onDragStop.add(this.dropHandler, this);\n        }\n\n\n\n    }\n\n    lastText() {\n        this.textbox.destroy();\n        let text = this.translation.translate(\"last12\");\n        this.textbox = new Text(this.game, text);\n        this.isEnd = true;\n    }\n\n    dropHandler(item, pointer) {\n        this.isWrong = false;\n        this.game.physics.arcade.collide(this.DinosG.children, item, this.stopCollision, null, this);\n        this.game.physics.arcade.collide(this.earth, item, this.collisionHandler, null, this);\n\n    }\n\n    stopCollision (obj1, obj2) {\n        this.isWrong = true;\n        //this.plantsCount--;\n        obj2.x = 500;\n        obj2.inputEnabled = true;\n        obj2.input.enableDrag();\n\n    }\n\n    collisionHandler (obj1, obj2){\n        if (!this.isWrong) {\n            this.dinosCount++;\n            obj2.inputEnabled = false;\n            //this.onEarth.add(obj2);\n            //this.game.stage.backgroundColor = '#992d2d';\n        }\n\n    }\n\n    nextEvent() {\n        this.textbox.destroy();\n        this.game.world.removeAll();\n        this.game.state.start('People', true, false);\n    }\n\n\n\n}\n\nexport default Dinosaurs;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nimport Earth from 'objects/Earth';\nimport Translation from 'utils/translate';\nimport Text from 'objects/text';\n\nclass DragndropPlants extends Phaser.State {\n\n    create() {\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\n\n        this.earth = new Earth(this.game, this.game.world.centerX, this.game.world.centerY, 'firstEarth', this.game.earthRotate);\n\n        //text\n        this.translation = new Translation(this.game);\n        let text = this.translation.translate(\"first10_1\");\n        this.textbox = new Text(this.game, text);\n\n\n        this.animals = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'oceanAnimals');\n        this.animals.scale.x = 0; this.animals.scale.y = 0; this.animals.anchor.y = 0.5; this.animals.anchor.x = 0.5;\n        this.firstStage = true;\n        this.secondStage = false;\n\n\n        //enable mouse input\n        this.game.input.mouse.capture = true;\n\n        //counts plants on earth\n        this.plantsCount = 0;\n\n        //z-depth\n        let earthG = this.game.add.group();\n        let animalsG = this.game.add.group();\n        earthG.add(this.earth);\n        animalsG.add(this.animals);\n        earthG.z = 100\n        animalsG.z = 120;\n        // this.plant = new Plant(this.game, 70, 70, 'plant');\n        //\n        this.game.physics.enable( [ this.earth], Phaser.Physics.ARCADE);\n        //\n        // this.plant.inputEnabled = true;\n        // this.plant.input.enableDrag(true);\n    }\n\n    update(){\n        if (this.firstStage && this.game.input.activePointer.leftButton.isDown) {\n            this.firstStage = false;\n            this.getIntoWater();\n        }\n        if (this.secondStage && this.game.input.activePointer.leftButton.isDown) {\n            this.secondStage = false;\n            this.outOfWater();\n        }\n\n        if (this.plantsCount === 6) {\n            //this.items.anchor.x = 0.5; this.items.anchor.y = 0.5;\n            this.plantsRotate = true;\n            this.lastText();\n        }\n        if (this.plantsRotate) this.items.angle -= 0.03;\n\n        if (this.isEnd && this.game.input.activePointer.leftButton.isDown) {\n            this.nextEvent();\n        }\n        //this.game.physics.arcade.collide(this.earth, this.plant, this.collisionHandler, null, this);\n    }\n\n    getIntoWater() {\n        this.textbox.destroy();\n        this.game.add.tween(this.earth.scale).to({ x: 5, y: 5}, 3000, Phaser.Easing.Cubic.InOut, true, );\n        this.game.add.tween(this.animals.scale).to({ x: 1, y: 1}, 3000, Phaser.Easing.Cubic.InOut, true, );\n        this.game.time.events.add(Phaser.Timer.SECOND * 3, this.firstText, this);\n\n    }\n\n    outOfWater() {\n        this.textbox.destroy();\n        this.game.add.tween(this.earth.scale).to({ x: 0.5, y: 0.5}, 3000, Phaser.Easing.Cubic.InOut, true, );\n        this.game.add.tween(this.animals.scale).to({ x: 0, y: 0}, 3000, Phaser.Easing.Cubic.InOut, true, );\n        this.game.time.events.add(Phaser.Timer.SECOND * 3, this.secondText, this);\n\n    }\n\n    firstText() {\n        let text = this.translation.translate(\"first10_2\");\n        this.textbox = new Text(this.game, text);\n        this.secondStage = true;\n\n    }\n\n    secondText() {\n        let text = this.translation.translate(\"first10_3\");\n        this.textbox = new Text(this.game, text);\n        this.animals.destroy();\n\n        this.items = this.game.add.group();\n        this.items.x = this.game.world.centerX;\n        this.items.y = this.game.world.centerY;\n\n        let item;\n        for (var i = 0; i < 6; i++)\n        {\n            // Directly create sprites from the group.\n            item = this.items.create((-this.game.world.centerX+90), (-this.game.world.centerY + 100 + 90 * i), 'plant', i);\n            item.anchor.x = 0.5;\n            item.anchor.y = 0.5;\n            item.scale.x = 0.03;\n            item.scale.y = 0.03;\n            item.name = 'block' + i;\n\n            // Enable input detection, then it's possible be dragged.\n            item.inputEnabled = true;\n\n            // Make this item draggable.\n            item.input.enableDrag();\n\n            // Then we make it snap to 90x90 grids.\n            //item.input.enableSnap(50, 50, false, true);\n\n            // Add a handler to remove it using different options when dropped.\n            this.game.physics.enable( [ item ], Phaser.Physics.ARCADE);\n            item.events.onDragStop.add(this.dropHandler, this);\n        }\n\n\n\n    }\n\n    lastText() {\n        this.textbox.destroy();\n        let text = this.translation.translate(\"last10\");\n        this.textbox = new Text(this.game, text);\n        this.isEnd = true;\n    }\n\n    dropHandler(item, pointer) {\n\n        // if (item.x < 90) {\n        //     item.x = 90;\n        // }\n        // else if (item.x > 400) {\n        //     //  Remove the item from the Group.\n        //     this.items.remove(item);\n        // }\n\n        this.isWrong = false;\n        this.game.physics.arcade.collide(this.items.children, item, this.stopCollision, null, this);\n        this.game.physics.arcade.collide(this.earth, item, this.collisionHandler, null, this);\n\n    }\n\n    stopCollision (obj1, obj2) {\n        this.isWrong = true;\n        //this.plantsCount--;\n        obj2.x = 500;\n        obj2.inputEnabled = true;\n        obj2.input.enableDrag();\n\n    }\n\n    collisionHandler (obj1, obj2) {\n        if (!this.isWrong) {\n            this.plantsCount++;\n            obj2.inputEnabled = false;\n            //this.game.stage.backgroundColor = '#992d2d';\n        }\n\n    }\n\n    nextEvent() {\n        this.textbox.destroy();\n        this.game.world.removeAll();\n        this.game.state.start('Magma', true, false);\n    }\n\n\n\n}\n\nexport default DragndropPlants;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nimport Earth from 'objects/Earth';\nimport Translation from 'utils/translate';\nimport Text from 'objects/text';\n\n\n\nclass DuplicateCells extends Phaser.State {\n\n    create() {\n        this.earth = new Earth(this.game, this.game.world.centerX, this.game.world.centerY, 'firstEarth', this.game.earthRotate);\n\n        //text\n        this.translation = new Translation(this.game);\n        this.text = this.translation.translate(\"first8_1\");\n        this.textbox = new Text(this.game, this.text);\n\n        let spaceBar = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n        spaceBar.onDown.add(this.click, this);\n\n\n        //cell\n        this.cell = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'cells');\n        this.cell.anchor.x = 0.5;\n        this.cell.anchor.y = 0.5;\n        this.cell.scale.x = 0;\n        this.cell.scale.y = 0;\n\n        //for order of events\n        this.firstStage = true;\n        this.secondStage = false;\n        this.cellCounter = 0;\n        this.isEnd = false;\n        //duplicate on click\n        this.cell.inputEnabled = true;\n\n        this.game.input.mouse.capture = true;\n\n        //z-depth\n        let earthG = this.game.add.group();\n        this.cellsG = this.game.add.group();\n        earthG.add(this.earth);\n        this.cellsG.add(this.cell);\n        earthG.z = 100\n        this.cellsG.z = 120;\n\n        this.cellsG.x = 0.5; this.cellsG.y = 0.5;\n        this.cellsG.inputEnableChildren = true;\n        this.cellsG.onChildInputDown.add(this.onDown, this);\n\n    }\n\n    update(){\n        if (this.firstStage && this.game.input.activePointer.leftButton.isDown) {\n            this.firstStage = false;\n            this.getIntoWater();\n        }\n        if(this.cellCounter === 7) {\n            //damit nicht immer in die if gegangen wird\n            this.cellCounter = 6;\n\n            //delete input from cells\n            for(var i = 0; i <= this.cellsG.children.length-1; i++) {\n                this.cellsG.children[i].input.enabled = false;\n            }\n\n            //neuer text\n            let text = this.translation.translate(\"last8\");\n            this.textbox.destroy();\n            this.textbox = new Text(this.game, text);\n\n            // short wait for user before he continues\n            this.game.time.events.add(Phaser.Timer.SECOND * 3, this.EndScene, this);\n        }\n        if (this.isEnd && this.game.input.activePointer.leftButton.isDown) {\n            this.secondStage = false;\n            this.outOfWater();\n            this.isEnd = true;\n        }\n    }\n    getIntoWater() {\n        this.textbox.destroy();\n        this.game.add.tween(this.earth.scale).to({ x: 7, y: 7}, 3000, Phaser.Easing.Cubic.InOut, true, );\n        this.game.add.tween(this.cell.scale).to({ x: 0.2, y: 0.2}, 3000, Phaser.Easing.Cubic.InOut, true, );\n        this.game.time.events.add(Phaser.Timer.SECOND * 2.5, this.firstText, this);\n\n    }\n\n    outOfWater() {\n        this.textbox.destroy();\n        this.game.add.tween(this.earth.scale).to({ x: 0.5, y: 0.5}, 3000, Phaser.Easing.Cubic.InOut, true, );\n        this.game.add.tween(this.cellsG.scale).to({ x: 0, y: 0}, 3000, Phaser.Easing.Cubic.InOut, true, );\n        this.game.add.tween(this.cellsG.position).to({ x: this.game.world.centerX, y: this.game.world.centerY}, 3000, Phaser.Easing.Cubic.InOut, true,);\n        this.game.time.events.add(Phaser.Timer.SECOND * 3, this.nextEvent, this);\n\n    }\n\n    firstText() {\n        let text = this.translation.translate(\"first8_2\");\n        this.textbox = new Text(this.game, text);\n        this.secondStage = true;\n    }\n    onDown (obj) {\n        this.addCell();\n        this.addCell();\n        this.cellCounter ++;\n        this.cellsG.remove(obj);\n    }\n\n    addCell() {\n        let cell = this.game.add.sprite(this.game.rnd.integerInRange(50, this.game.world.width-150),this.game.rnd.integerInRange(150, this.game.world.height-150), 'cells');\n        cell.scale.x = 0.2;\n        cell.scale.y = 0.2;\n        this.cellsG.add(cell);\n    }\n\n    click(){\n        let text = this.translation.translate(\"first8_2\");\n        this.textbox.destroy();\n        this.textbox = new Text(this.game, text);\n    }\n\n    EndScene() {\n        this.isEnd = true;\n    }\n\n    nextEvent() {\n        this.cellsG.removeAll();\n        this.textbox.destroy();\n        this.game.world.removeAll();\n        this.game.state.start('Plants', true, false);\n    }\n\n\n\n}\n\nexport default DuplicateCells;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nimport Translation from 'utils/translate';\nimport Text from 'objects/text';\n\n\n\nclass End extends Phaser.State {\n\n    create() {\n        this.game.world.removeAll();\n\n        //text\n        this.translation = new Translation(this.game);\n        this.text = this.translation.translate(\"end01\");\n        this.textbox = new Text(this.game, this.text);\n        this.textbox.y = this.game.world.centerY;\n        this.text02 = false;\n        this.text03 = false;\n        this.text04 = false;\n\n        this.game.input.mouse.capture = true;\n\n        this.game.time.events.add(Phaser.Timer.SECOND * 3, this.booleanText02, this);\n    }\n\n    update(){\n\n        if(this.text02 && this.game.input.activePointer.leftButton.isDown){\n            let text = this.translation.translate(\"end02\");\n            this.textbox.destroy();\n            this.textbox = new Text(this.game, text);\n            this.textbox.y = this.game.world.centerY;\n            this.text02 = false;\n            this.game.time.events.add(Phaser.Timer.SECOND * 3, this.booleanText03, this);\n\n        } else if(this.text03 && this.game.input.activePointer.leftButton.isDown) {\n            let text = this.translation.translate(\"end03\");\n            this.textbox.destroy();\n            this.textbox = new Text(this.game, text);\n            this.textbox.y = this.game.world.centerY;\n            this.text03 = false;\n            this.game.time.events.add(Phaser.Timer.SECOND * 3, this.booleanText04, this);\n\n        } else if(this.text04 && this.game.input.activePointer.leftButton.isDown){\n            let text = this.translation.translate(\"end04\");\n            this.textbox.destroy();\n            this.textbox = new Text(this.game, text);\n            this.textbox.y = this.game.world.centerY;\n            this.text04 = false;\n    }\n    }\n\n    booleanText02(){\n        this.text02 = true;\n    }\n\n    booleanText03(){\n        this.text03 = true;\n    }\n\n    booleanText04(){\n        this.text04 = true;\n    }\n\n}\n\nexport default End;",
    "import RainbowText from 'objects/RainbowText';\n\nclass GameState extends Phaser.State {\n\n\tcreate() {\n\t\tlet center = { x: this.game.world.centerX, y: this.game.world.centerY }\n\t\tlet text = new RainbowText(this.game, center.x, center.y, \"- phaser -\\nwith a sprinkle of\\nES6 dust!\");\n\t\ttext.anchor.set(0.5);\n\t}\n\n}\n\nexport default GameState;\n",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nimport Earth from 'objects/Earth';\nimport Translation from 'utils/translate';\nimport Text from 'objects/text';\n\nclass Kollision extends Phaser.State {\n\n\n    create() {\n        this.game.stage.backgroundColor = '#000';\n        // earth\n        let center = { x: this.game.world.centerX, y: this.game.world.centerY }\n        this.earth = new Earth(this.game, center.x, center.y, 'firstEarth', this.game.earthRotate);\n\n        //text\n        let translation = new Translation(this.game);\n        this.text = translation.translate(\"first4\");\n        this.textbox = new Text(this.game, this.text);\n\n        //button\n        this.button = this.game.add.sprite(this.game.world.centerX/2, this.game.world.height, 'redButton');\n        this.button.anchor.x = 0.5; this.button.scale.x = 0.7; this.button.scale.y = 0.7;\n        this.game.time.events.add(Phaser.Timer.SECOND * 3, this.moveButton, this);\n\n        //splitter\n        this.splitter = this.game.add.sprite(this.game.world.width, this.game.world.centerY, 'splitter');\n        this.splitter.scale.x = 0.3; this.splitter.scale.y = 0.3;\n        this.isDestroyed = false;\n\n        // groups for z depth\n        let earthG = this.game.add.group();\n        let buttonG = this.game.add.group();\n        earthG.add(this.earth);\n        buttonG.add(this.splitter);\n        earthG.z = 100;\n        buttonG.z = 120;\n    }\n\n    moveButton() {\n        //this.game.physics.arcade.enable([ this.button ], Phaser.Physics.ARCADE);\n        this.game.add.tween(this.button).to( { y: window.innerHeight/6*4}, 2000, Phaser.Easing.Cubic.InOut, true);\n        this.button.inputEnabled = true;\n        this.button.events.onInputDown.add(this.listener, this);\n    }\n    listener () {\n        this.game.add.tween(this.button).to( { y: this.game.world.height}, 1000, Phaser.Easing.Linear.None, true);\n        this.isDestroyed = false;\n        this.game.add.tween(this.splitter).to( { x: this.game.world.centerX , y: this.game.world.centerY}, 5000, Phaser.Easing.Linear.None, true);\n        console.info('Button clicked.');\n    }\n    update() {\n\n        if (!this.isDestroyed && this.splitter.x == (this.game.world.centerX))\n        {\n\n            this.isDestroyed = true;\n            this.earth.destroy();\n            this.textbox.destroy();\n            this.game.world.remove();\n            this.button.destroy();\n            this.game.state.start('Moon', true, false);\n        }\n    }\n\n    checkOverlap(spriteA, spriteB) {\n        var boundsA = spriteA.getBounds();\n        var boundsB = spriteB.getBounds();\n\n        return Phaser.Rectangle.intersects(boundsA, boundsB);\n    }\n\n    nextEvent() {\n        // this.earth.destroy();\n        // this.text.destroy();\n        // this.game.world.remove(this.textbox);\n        // this.button.destroy();\n        //this.game.world.removeAll();\n        this.game.state.start('Moon', true, true);\n    }\n}\n\nexport default Kollision;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nimport Earth from 'objects/Earth';\nimport Translation from 'utils/translate';\nimport Text from 'objects/text';\n\n\nclass Magma extends Phaser.State {\n\n    create() {\n\n        //text\n        this.translation = new Translation(this.game);\n        this.text = this.translation.translate(\"first11\");\n        this.textbox = new Text(this.game, this.text);\n\n        //earth\n        let center = {x: this.game.world.centerX, y: this.game.world.centerY};\n        this.earth = new Earth(this.game, center.x, center.y, 'firstEarth', this.game.earthRotate);\n        console.info(this.game.earthRotate);\n\n        //first button\n            this.button01 = this.game.add.sprite(40, -80, 'magmaButton');\n        this.button01.anchor.x = 0.5; this.button01.scale.x = 0.03; this.button01.scale.y = 0.03;\n        this.button01.inputEnabled = true;\n        this.button01.events.onInputDown.add(this.listener01, this);\n\n        //second button\n        this.button02 = this.game.add.sprite(-70, 70, 'magmaButton');\n        this.button02.anchor.x = 0.5; this.button02.scale.x = 0.03; this.button02.scale.y = 0.03;\n        this.button02.inputEnabled = true;\n        this.button02.events.onInputDown.add(this.listener02, this);\n\n        this.button01Count = false;\n        this.button02Count = false;\n\n        this.isEnd = false;\n\n\n        // groups for z depth\n        let earthG = this.game.add.group();\n        this.buttonG = this.game.add.group();\n        earthG.add(this.earth);\n        this.buttonG.add(this.button01);\n        this.buttonG.add(this.button02);\n        earthG.z = 100;\n        this.buttonG.z = 120;\n        this.buttonG.x = this.game.world.centerX;\n        this.buttonG.y = this.game.world.centerY;\n    }\n\n    update() {\n        this.buttonG.angle -= 0.03;\n        if(this.button01Count && this.button02Count) {\n            let text = this.translation.translate(\"last11\");\n            this.textbox.destroy();\n            this.textbox = new Text(this.game, text);\n            this.game.time.events.add(Phaser.Timer.SECOND * 1, this.EndScene, this);\n        }\n\n        if (this.isEnd && this.game.input.activePointer.leftButton.isDown) {\n            this.nextEvent();\n        }\n    }\n\n    listener01(){\n        this.button01.alpha = 0.5;\n        this.button01Count = true;\n    }\n\n    listener02(){\n        this.button02.alpha = 0.5;\n        this.button02Count = true;\n\n    }\n\n    EndScene() {\n        this.isEnd = true;\n    }\n\n    nextEvent() {\n        this.textbox.destroy();\n        this.earth.destroy();\n        this.button01.destroy();\n        this.button02.destroy();\n        this.game.state.start('Dinos', true, false);\n    }\n\n}\n\nexport default Magma;",
    "/**\n * Created by alinaisabelle on 24.04.18.\n */\nimport Earth from 'objects/Earth';\nimport MoonObject from 'objects/Moon';\nimport Translation from 'utils/translate';\nimport Text from 'objects/text';\n\nclass Moon extends Phaser.State {\n\n\n    create() {\n        // earth\n        this.game.world.removeAll();\n        this.earth = new Earth(this.game, this.game.world.centerX, this.game.world.centerY, 'explodedearth', this.game.earthRotate);\n\n        //text\n        this.translation = new Translation(this.game);\n        let text = this.translation.translate(\"first5\");\n        this.textbox = new Text(this.game, text);\n\n        //moon\n        this.SpaceClicked = 0;\n        this.moon = new MoonObject(this.game, 2.3, 2.3, 'moon');\n        this.moon.alpha = 0;\n        this.isEnd = false;\n\n        // groups for z depth\n        let earthG = this.game.add.group();\n        let textG = this.game.add.group();\n        textG.add(this.textbox);\n        earthG.add(this.earth);\n        earthG.add(this.moon);\n        earthG.z = 100;\n        earthG.z = 110;\n    }\n\n    update(){\n        let spacebar = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n        spacebar.onDown.add(this.click, this);\n\n        this.game.input.keyboard.addKeyCapture([ Phaser.Keyboard.SPACEBAR ]);\n\n        if (this.SpaceClicked === 5) {\n            let text = this.translation.translate(\"last5\");\n            this.textbox.destroy();\n            this.textbox = new Text(this.game, text);\n            this.isEnd = true;\n        }\n\n        if (this.isEnd && this.game.input.activePointer.leftButton.isDown) {\n            this.nextEvent();\n        }\n\n    }\n    click () {\n        this.SpaceClicked++;\n        this.moon.alpha += 0.2;\n    }\n\n    nextEvent() {\n        this.earth.destroy();\n        this.moon.destroy();\n        this.textbox.destroy();\n        this.game.world.remove();\n        this.game.state.start('Cells', true, false);\n    }\n}\n\nexport default Moon;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nimport Earth from 'objects/Earth';\nimport Translation from 'utils/translate';\nimport Text from 'objects/text';\n\n\n\nclass People extends Phaser.State {\n\n    create() {\n        this.earth = new Earth(this.game, this.game.world.centerX, this.game.world.centerY, 'firstEarth', this.game.earthRotate);\n\n        //text\n        this.translation = new Translation(this.game);\n        this.text = this.translation.translate(\"first14\");\n        this.textbox = new Text(this.game, this.text);\n\n        //cell\n        let center = { x: this.game.world.centerX, y: this.game.world.centerY };\n        this.people = this.game.add.sprite(center.x, center.y, 'people');\n        this.people.anchor.x = 0.5;\n        this.people.anchor.y = 0.5;\n        this.people.scale.x = 0.05;\n        this.people.scale.y = 0.05;\n\n        //duplicate with v\n        this.v = this.game.input.keyboard.addKey(Phaser.Keyboard.V);\n        this.v.onDown.add(this.pressV, this);\n        this.enoughPeople = false;\n\n        let earthG = this.game.add.group();\n        let peopleG = this.game.add.group();\n        earthG.add(this.earth);\n        peopleG.add(this.people);\n        earthG.z = 100;\n        peopleG.z = 120;\n\n\n        this.game.input.mouse.capture = true;\n    }\n\n    update(){\n        if(this.game.counter === 5) {\n            let text = this.translation.translate(\"last14\");\n            this.textbox.destroy();\n            this.textbox = new Text(this.game, text);\n            this.enoughPeople = true;\n            //this.nextEvent();\n        }\n\n        if(this.game.input.activePointer.leftButton.isDown && this.enoughPeople == true) {\n            this.nextEvent();\n        }\n    }\n\n    pressV () {\n        let x = this.game.rnd.integerInRange(this.game.world.centerX+150, this.game.world.centerX-150);\n        let y = this.game.rnd.integerInRange(this.game.world.centerY+150, this.game.world.centerY-150);\n        let people = this.game.add.sprite(x, y, 'people');\n        people.scale.x = 0.05;\n        people.scale.y = 0.05;\n        this.game.counter ++;\n\n    }\n\n    nextEvent() {\n        this.textbox.destroy();\n        this.game.world.removeAll();\n        this.game.state.start('End', true, false);\n    }\n\n\n\n}\n\nexport default People;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nclass Preloader extends Phaser.State {\n\n\n    preload() {\n        this.game.load.script('webfont', '//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js');\n        this.game.load.image('firstEarth', 'assets/Urknall/littleEarth.png');\n        this.game.load.image('urknall', 'assets/Urknall/Urknall.jpg');\n        this.game.load.image('redButton', 'assets/Kollision/Button.png');\n        this.game.load.json('translation', 'data/languageText.json');\n        this.game.load.image('splitter', 'assets/Urknall/splitter.png');\n        this.game.load.image('moon', 'assets/Moon/moon.png');\n        this.game.load.image('explodedearth', 'assets/Moon/explodedearth.jpg');\n\n        this.game.load.image('plant', 'assets/Plants/plant.png');\n        this.game.load.image('oceanAnimals', 'assets/Plants/animals.jpg');\n        this.game.load.image('cells', 'assets/Cell/cell.png');\n        this.game.load.image('magmaButton', 'assets/Magma/magmaButton.png');\n        this.game.load.image('people', 'assets/People/people.png');\n        this.game.load.image('dino', 'assets/Dinos/Dino.png');\n    }\n\n\n    create() {\n        this.game.load.start();\n        var wfconfig = {\n\n            active: function() {\n                console.log(\"font loaded\");\n                //init();\n            },\n\n            google: {\n                families: ['Roboto Mono']\n            }\n\n        };\n        WebFont.load(wfconfig);\n        //this.game.load.start();\n        this.game.state.start('Urknall');\n    }\n\n}\n\nexport default Preloader;",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nimport RainbowText from 'objects/RainbowText';\nimport Earth from 'objects/Earth';\nimport Splitter from 'objects/Splitter';\nimport Translation from 'utils/translate';\nimport Text from 'objects/text';\n\nclass Urknall extends Phaser.State {\n\n\n\n    create() {\n        this.game.stage.backgroundColor = '#fff';\n        let translation = new Translation(this.game);\n        this.text = translation.translate(\"first1\");\n        this.textbox = new Text(this.game, this.text);\n        this.textbox.addColor('#000', 0);\n        this.textbox.y = this.game.world.centerY-50;\n        this.SpaceClicked = 0;\n        this.wasKnall = false;\n        this.urknall = null;\n\n    }\n    update(){\n        let spacebar = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n        spacebar.onDown.add(this.click, this);\n\n        this.game.input.keyboard.addKeyCapture([ Phaser.Keyboard.SPACEBAR ]);\n\n        if (!this.wasKnall && this.SpaceClicked === 20) {\n            this.wasKnall = true;\n            this.textbox.destroy();\n            let urknall = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'urknall');\n            urknall.anchor.x = 0.5; urknall.anchor.y = 0.5; urknall.lifespan = 2000;\n            this.game.time.events.add(Phaser.Timer.SECOND * 2, this.universum, this);\n        }\n        if (this.wasKnall && this.game.input.activePointer.leftButton.isDown) {\n            this.nextEvent();\n        }\n\n    }\n\n    universum() {\n        this.game.stage.backgroundColor = '#000';\n        let translation = new Translation(this.game);\n        this.text = translation.translate(\"last1\");\n        this.textbox = new Text(this.game, this.text);\n        let enter = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n        enter.onDown.add(this.nextEvent, this);\n    }\n    click (){\n        this.SpaceClicked++;\n    }\n\n    nextEvent() {\n        this.textbox.destroy();\n        this.game.state.start('Kollision', true, false);\n    }\n}\n\nexport default Urknall;\n",
    "/**\n * Created by alinaisabelle on 23.04.18.\n */\nexport default class Translation {\n    /**\n     * Constructor for Translation\n     *\n     * @param {Object} game Reference to the Game Object\n     * @param {Object} translations The translations from your JSON object\n     */\n    constructor(game, translations) {\n        this.game = game;\n        this.defaultLanguage = 'de';\n        this.availableLanguages = ['de', 'en'];\n        this.translations = this.game.cache.getJSON('translation');\n\n        // check for user language\n        let preferredLanguage = navigator.language || navigator.userLanguage || navigator.browserLanguage || navigator.systemLanguage || this.defaultLanguage;\n\n        // check if valid or not\n        if (preferredLanguage === null || preferredLanguage === undefined || preferredLanguage === false || typeof (preferredLanguage !== 'string')) {\n            this.languageCode = this.defaultLanguage;\n            // if valid, then get first 2 chars of languag code\n        } else if (preferredLanguage.length > 2) {\n            this.languageCode = preferredLanguage.substr(0, 2);\n            // already valid and only 2 characters long\n        } else {\n            this.languageCode = preferredLanguage;\n        }\n\n        // if the language code is not in the available languages, then use the default language\n        if(!this.contains(this.availableLanguages, this.languageCode)) {\n            this.languageCode = this.defaultLanguage\n        }\n    }\n\n    /**\n     * @description Returns a string translation\n     *\n     * @param {string} val the text to translate\n     *\n     * @returns {string}\n     */\n    translate(val) {\n        if(this.translations[this.languageCode][val]) {\n            return this.translations[this.languageCode][val];\n        } else {\n            // console.info('could not find translation', val, '-' this.lc);\n        }\n    }\n\n    /**\n     * @description loops through a given array and checks if the passed value is matched anywhere\n     *\n     * @param {array} arr Array to loop over\n     * @param {string} val value to compare\n     *\n     * @returns {boolean}\n     */\n    contains(arr, val) {\n        for (let i = 0; i < arr.length - 1; i++) {\n            if (arr[i] == val) {\n                return true;\n            }\n        }\n        return false;\n    }\n}"
  ]
}